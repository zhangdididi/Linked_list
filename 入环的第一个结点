public ListNode detectCycle(ListNode head) {
        //链表头部出发到入口点距离
        //和快慢指针交汇处出发到入口点距离相等
        if (head == null) {
            return null;
        }
        ListNode slow = head;
        ListNode fast = head;
        while (fast != null && fast.next != null) {
            fast = fast.next.next;
            slow = slow.next;
            if (fast == slow) {
                break;
            }
        }
        //循环结束，fast和slow重合
        if (fast == null || fast.next == null) {
                return null;//不带环
        }
        ListNode cur1 = head;
        ListNode cur2 = fast;
        while (cur1 != cur2) {
            cur1 = cur1.next;
            cur2 = cur2.next;
        }
        //循环结束，走到入口处
        return cur1;
}
