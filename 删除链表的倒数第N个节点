/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        if (head == null || head.next == null) {
            return null;
        }
        ListNode newHead = new ListNode(-1);//保存要删除的前一个结点
        newHead.next = head;
        ListNode prev = null;
        ListNode fast = head;
        ListNode slow = head;
        for (int i = 0; i < n - 1; i++) {
            fast = fast.next;
        }
        while (fast != null && fast.next != null) {
            prev = slow;
            fast = fast.next;
            slow = slow.next;
            
        }
        if (prev == null) {
            newHead.next = head.next;
            return newHead.next;
        } else {
            prev.next = slow.next;
            return head;
        }
    }
}
